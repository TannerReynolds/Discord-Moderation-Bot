// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Guild {
    id          String       @id
    logs        LogType?
    mutes       Mute[]
    bans        Ban[]
    turlemodes  TurtleMode[]
    warns       Warning[]
    mutedRole   String?
    colors      NitroColor[]
    failedJoins FailedJoin[]
    highlights  Highlight[]
    tags        Tag[]
    mail        Mail[]

    @@unique(id)
    @@index(id)
}

model FailedJoin {
    id      Int      @id @default(autoincrement())
    time    DateTime @default(now())
    userID  String
    Guild   Guild?   @relation(fields: [guildId], references: [id])
    guildId String?
}

model Channel {
    id      String @id
    snipe   Snipe? @relation(fields: [snipeId], references: [id])
    snipeId Int?

    @@unique(id)
    @@index(id)
}

model Snipe {
    id            Int       @id @default(autoincrement())
    Channel       Channel[]
    memberPfp     String
    memberName    String
    memberMessage String
}

model NitroColor {
    roleID  String  @id
    emoji   String
    name    String
    Guild   Guild?  @relation(fields: [guildId], references: [id])
    guildId String?

    @@unique([roleID, guildId])
}

model Member {
    id String @id

    @@unique(id)
    @@index(id)
}

model Mute {
    startDate DateTime @default(now())
    endDate   DateTime
    reason    String   @default("No reason provided")
    moderator String
    userID    String
    duration  String
    Guild     Guild    @relation(fields: [guildId], references: [id])
    guildId   String

    @@id([userID, guildId])
}

model Ban {
    startDate DateTime @default(now())
    endDate   DateTime
    reason    String   @default("No reason provided")
    moderator String
    userID    String
    Guild     Guild    @relation(fields: [guildId], references: [id])
    guildId   String
    duration  String

    @@id([userID, guildId])
}

model TurtleMode {
    startDate DateTime @default(now())
    endDate   DateTime
    reason    String   @default("No reason provided")
    interval  Int
    moderator String
    userID    String
    Guild     Guild    @relation(fields: [guildId], references: [id])
    guildId   String
    duration  String

    @@id([userID, guildId])
}

model Highlight {
    id      Int    @id @default(autoincrement())
    phrase  String
    userID  String
    Guild   Guild  @relation(fields: [guildId], references: [id])
    guildId String

    @@index([guildId])
}

model Warning {
    id        Int      @id @default(autoincrement())
    date      DateTime @default(now())
    reason    String   @default("No reason provided")
    moderator String
    userID    String
    type      String
    Guild     Guild    @relation(fields: [guildId], references: [id])
    guildId   String

    @@index([userID, guildId])
}

model Mail {
    date    DateTime @default(now())
    postID  String   @id
    userID  String
    Guild   Guild    @relation(fields: [guildId], references: [id])
    guildId String

    @@index([userID, guildId, postID])
}

model Tag {
    id             Int      @id @default(autoincrement())
    name           String
    content        String?
    Guild          Guild?   @relation(fields: [guildId], references: [id])
    guildId        String?
    attachmentName String?
    attachmentData Bytes?
    createdAt      DateTime @default(now())

    @@unique([name, guildId])
}

enum LogType {
    MessageDelete
    MessageUpdate
}
